name: Build and Push Docker Image
on:
  push:
    branches-ignore: [main, develop]
  pull_request:
    branches-ignore: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

          if [ "$BRANCH" = "main" ]; then
            echo "subdomain=app" >> $GITHUB_OUTPUT
            echo "domain=zylolabs.xyz" >> $GITHUB_OUTPUT
            echo "service_name=app" >> $GITHUB_OUTPUT
          elif [ "$BRANCH" = "develop" ]; then
            echo "subdomain=dev" >> $GITHUB_OUTPUT
            echo "domain=dev.zylolabs.xyz" >> $GITHUB_OUTPUT
            echo "service_name=develop" >> $GITHUB_OUTPUT
          else
            echo "subdomain=$SHORT_SHA" >> $GITHUB_OUTPUT
            echo "domain=$SHORT_SHA.zylolabs.xyz" >> $GITHUB_OUTPUT
            echo "service_name=$SHORT_SHA" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.branch }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.meta.outputs.branch }}
            app.kubernetes.io/name=${{ steps.meta.outputs.subdomain }}

      - name: Update docker-compose.yml on server
        run: |
          echo "$SERVICE_ENTRY" > service_entry.txt
          scp -P 2222 service_entry.txt ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/tmp/service_entry.txt

      - name: Redeploy main/develop with Watchtower
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
        run: |
          ssh -p 2222 ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
            cd /home/${{ secrets.SSH_USER }}/ && docker compose pull ${{ steps.meta.outputs.service_name }} && docker compose up -d ${{ steps.meta.outputs.service_name }}
            echo 'Redeployed ${{ steps.meta.outputs.domain }}'
          "
          
      - name: Notify deployment
        run: |
          echo "Deployed to https://${{ steps.meta.outputs.domain }}"
